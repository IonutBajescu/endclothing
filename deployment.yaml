# I'm keeping this in one file to make it easier to talk about if you have
# any questions during the on-site. Otherwise, you'd want each
# resource definition as a separate file.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-example
spec:
  replicas: 3
  selector:
    matchLabels:
      app: wordpress-example
  template:
    metadata:
      labels:
        app: wordpress-example
    spec:
      containers:
        - name: wordpress
          image: built_image_in_our_private_registry # i.e. ECR, Quay etc
          ports:
            - containerPort: 80
          envFrom:
            - secretRef:
                name: wordpress-example
---
apiVersion: v1
kind: Secret
metadata:
  name: wordpress-example
  namespace: default
type: Opaque
data:
  WORDPRESS_DB_HOST: YWRtaW4=
  WORDPRESS_DB_USER: YWRtaW4=
  WORDPRESS_DB_PASSWORD: YWRtaW4=
  WORDPRESS_DB_NAME: YWRtaW4=
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-example
spec:
  type: LoadBalancer
  selector:
    app: wordpress-example
  ports:
    - protocol: TCP
      port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-example-mysql
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: wordpress-example-mysql
  template:
    metadata:
      labels:
        app: wordpress-example-mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8
          ports:
            - containerPort: 3306
          # Here I'd mount a configmap with the initial SQL for the database, to make it work
          # between database restarts due to lack of persistence.
          envFrom:
            - secretRef:
                name: wordpress-example-mysql
---
apiVersion: v1
kind: Secret
metadata:
  name: wordpress-example-mysql
  namespace: default
type: Opaque
data:
  WORDPRESS_USER: YWRtaW4=
  WORDPRESS_PASSWORD: YWRtaW4=
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-example-mysql
spec:
  selector:
    app: wordpress-example-mysql
  ports:
    - protocol: TCP
      port: 3306

# Redis would be configured similarly to MySQL. I'll skip the copy paste.
